sudo: false
language: cpp
git:
  depth: 500
addons:
  apt:
    packages:
    - srecord
cache:
  directories:
    - cache
before_install:
- cat build.config
- export X_EMAIL=$(grep -E 'email=(.*)' build.config | cut -c 7-)
- export X_BRANCH=$(grep -E 'branch=(.*)' build.config | cut -c 8-)
- export X_MODULES=$(grep -E 'modules=(.*)' build.config | cut -c 9-)
- export X_U8G_FONTS=$(grep -E 'u8g-fonts=(.*)' build.config | cut -c 11-)
- export X_U8G_DISPLAY_I2C=$(grep -E 'u8g-display-i2c=(.*)' build.config | cut -c 17-)
- export X_U8G_DISPLAY_SPI=$(grep -E 'u8g-display-spi=(.*)' build.config | cut -c 17-)
- export X_UCG_DISPLAY_SPI=$(grep -E 'ucg-display-spi=(.*)' build.config | cut -c 17-)
- export X_SSL_ENABLED=$(grep -E 'ssl-enabled=(.*)' build.config | cut -c 13-)
- export X_DEBUG_ENABLED=$(grep -E 'debug-enabled=(.*)' build.config | cut -c 15-)
- export X_FATFS_ENABLED=$(grep -E 'fatfs-enabled=(.*)' build.config | cut -c 15-)
# count ',' in the string and add +1
- export X_NUMBER_OF_MODULES=$((`echo $X_MODULES | tr -d -c ',' | wc -m`+1))
- env | grep 'X_'

- wget -d -v --tries=10 --timeout=15 --waitretry=30 --read-timeout=20 --retry-connrefused --no-check-certificate 'https://nodemcu-build.com/hook.php?event=start&recipient='${X_EMAIL//+/%2B}
- git clone --depth=1 --branch=$X_BRANCH git://github.com/nodemcu/nodemcu-firmware.git nodemcu-firmware

# dig in and modify those config files
- cd nodemcu-firmware/app/include

# replace modules in user_modules.h by the selected ones
- bash $TRAVIS_BUILD_DIR/set-modules.sh
# comment the SSL flag in user_config.h if not enabled
- bash $TRAVIS_BUILD_DIR/set-ssl.sh
# set the NODE_DEBUG and COAP_DEBUG flags in user_config.h
- bash $TRAVIS_BUILD_DIR/set-debug.sh
# set the BUILD_FATFS flag in user_config.h
- bash $TRAVIS_BUILD_DIR/set-fatfs.sh
# replace fonts in u8g_config.h by the selected ones
- bash $TRAVIS_BUILD_DIR/set-fonts.sh
# set I2C/SPI displays in u8g_config.h and ucg_config.h
- bash $TRAVIS_BUILD_DIR/set-displays.sh
# replace version strings in user_version.h
- bash $TRAVIS_BUILD_DIR/set-version.sh

- cat user_modules.h
- cat user_config.h
- cat u8g_config.h
- cat ucg_config.h
- cat user_version.h
# back to where we came from
- cd $TRAVIS_BUILD_DIR

- cd nodemcu-firmware
- ls -altr
install:
- pip install --user pyserial
script:
- if [ -f tools/esp-open-sdk.tar.xz ]; then tar -Jxvf tools/esp-open-sdk.tar.xz; else tar -zxvf tools/esp-open-sdk.tar.gz; fi
- export PATH=$PATH:$PWD/esp-open-sdk/sdk:$PWD/esp-open-sdk/xtensa-lx106-elf/bin
- make all
- cd bin/
- timestamp=$(date "+%Y-%m-%d-%H-%M-%S")
- base_file_name="nodemcu-"$X_BRANCH"-"$X_NUMBER_OF_MODULES"-modules-"$timestamp
- file_name_float=$base_file_name"-float.bin"
- srec_cat  -output ${file_name_float} -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000
- cd ../
- make clean
- make EXTRA_CCFLAGS="-DLUA_NUMBER_INTEGRAL"
- cd bin/
- file_name_integer=$base_file_name"-integer.bin"
- srec_cat -output ${file_name_integer} -binary 0x00000.bin -binary -fill 0xff 0x00000 0x10000 0x10000.bin -binary -offset 0x10000

after_success:
- cd $TRAVIS_BUILD_DIR
- pwd
- cp "$TRAVIS_BUILD_DIR/nodemcu-firmware/bin/${file_name_float}" .
- cp "$TRAVIS_BUILD_DIR/nodemcu-firmware/bin/${file_name_integer}" .
- rm -fr "$TRAVIS_BUILD_DIR/nodemcu-firmware"
- ls -al
- curl -T "{${file_name_float},${file_name_integer}}" -u ${FTP_USER}:${FTP_PASSWORD} --ftp-ssl -k ftp://sl61.web.hostpoint.ch
- wget -d -v --tries=10 --timeout=15 --waitretry=30 --read-timeout=20 --retry-connrefused --no-check-certificate 'https://nodemcu-build.com/hook.php?event=success&recipient='${X_EMAIL//+/%2B}'&branch='$X_BRANCH'&modules='$X_MODULES'&artifacts='${file_name_float},${file_name_integer}

notifications:
  email:
    recipients:
      - info@nodemcu-build.com
    on_success: never
    on_failure: always
  webhooks:
      urls:
        - https://nodemcu-build.com/hook.php?event=failure&recipient=${X_EMAIL//+/%2B}
      on_success: never
      on_failure: always
      on_start: never

branches:
  only:
    - builds
    - master
